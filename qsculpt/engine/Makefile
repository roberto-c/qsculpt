#############################################################################
# Makefile for building: libengine.so.0.1.0
# Generated by qmake (2.01a) (Qt 4.3.2) on: Thu Mar 20 16:32:19 2008
# Project:  engine.pro
# Template: lib
# Command: /usr/bin/qmake -unix -o Makefile engine.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_SHARED -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -DGL_GLEXT_PROTOTYPES -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -I. -Iinclude -I/usr/X11R6/include -Imoc -I./ui
LINK          = g++
LFLAGS        = -shared -Wl,-soname,libengine.so.0
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lQtOpenGL -lQtGui -lQtCore -lGLU -lGL -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = obj/

####### Files

SOURCES       = src/Box.cpp \
		src/Camera.cpp \
		src/Mesh.cpp \
		src/Object3D.cpp \
		src/Octree.cpp \
		src/Scene.cpp \
		src/Sphere.cpp \
		src/StdAfx.cpp \
		src/RendererFactory.cpp \
		src/FlatRenderer.cpp \
		src/PointRenderer.cpp \
		src/WireframeRenderer.cpp \
		src/SmoothRenderer.cpp 
OBJECTS       = obj/Box.o \
		obj/Camera.o \
		obj/Mesh.o \
		obj/Object3D.o \
		obj/Octree.o \
		obj/Scene.o \
		obj/Sphere.o \
		obj/StdAfx.o \
		obj/RendererFactory.o \
		obj/FlatRenderer.o \
		obj/PointRenderer.o \
		obj/WireframeRenderer.o \
		obj/SmoothRenderer.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		engine.pro
QMAKE_TARGET  = engine
DESTDIR       = ../build/debug/
TARGET        = libengine.so.0.1.0
TARGETA       = ../build/debug/libengine.a
TARGETD       = libengine.so.0.1.0
TARGET0       = libengine.so
TARGET1       = libengine.so.0
TARGET2       = libengine.so.0.1

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../build/debug/$(TARGET)

../build/debug/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../build/debug/ || $(MKDIR) ../build/debug/ 
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../build/debug/$(TARGET)
	-$(DEL_FILE) ../build/debug/$(TARGET0)
	-$(DEL_FILE) ../build/debug/$(TARGET1)
	-$(DEL_FILE) ../build/debug/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../build/debug/



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: engine.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf
	$(QMAKE) -unix -o Makefile engine.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile engine.pro

dist: 
	@$(CHK_DIR_EXISTS) obj/engine0.1.0 || $(MKDIR) obj/engine0.1.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) obj/engine0.1.0/ && $(COPY_FILE) --parents include/Box.h include/Camera.h include/ICamera.h include/IObject3D.h include/Mesh.h include/Object3D.h include/Octree.h include/Point3D.h include/Scene.h include/SpEnums.h include/Sphere.h include/StdAfx.h include/Triangle.h include/EdgeContainer.h include/FaceContainer.h include/IRenderer.h include/RendererFactory.h include/FlatRenderer.h include/PointRenderer.h include/WireframeRenderer.h include/SmoothRenderer.h obj/engine0.1.0/ && $(COPY_FILE) --parents src/Box.cpp src/Camera.cpp src/Mesh.cpp src/Object3D.cpp src/Octree.cpp src/Scene.cpp src/Sphere.cpp src/StdAfx.cpp src/RendererFactory.cpp src/FlatRenderer.cpp src/PointRenderer.cpp src/WireframeRenderer.cpp src/SmoothRenderer.cpp obj/engine0.1.0/ && (cd `dirname obj/engine0.1.0` && $(TAR) engine0.1.0.tar engine0.1.0 && $(COMPRESS) engine0.1.0.tar) && $(MOVE) `dirname obj/engine0.1.0`/engine0.1.0.tar.gz . && $(DEL_FILE) -r obj/engine0.1.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../build/debug/$(TARGET) 
	-$(DEL_FILE) ../build/debug/$(TARGET0) ../build/debug/$(TARGET1) ../build/debug/$(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

obj/Box.o: src/Box.cpp include/StdAfx.h \
		include/Box.h \
		include/Object3D.h \
		include/IObject3D.h \
		include/Point3D.h \
		include/SpEnums.h \
		include/Octree.h \
		include/PointContainer.h \
		include/EdgeContainer.h \
		include/FaceContainer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Box.o src/Box.cpp

obj/Camera.o: src/Camera.cpp include/StdAfx.h \
		include/Camera.h \
		include/ICamera.h \
		include/Point3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Camera.o src/Camera.cpp

obj/Mesh.o: src/Mesh.cpp include/StdAfx.h \
		include/Mesh.h \
		include/Object3D.h \
		include/IObject3D.h \
		include/Point3D.h \
		include/SpEnums.h \
		include/Octree.h \
		include/PointContainer.h \
		include/EdgeContainer.h \
		include/FaceContainer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Mesh.o src/Mesh.cpp

obj/Object3D.o: src/Object3D.cpp include/StdAfx.h \
		include/Object3D.h \
		include/IObject3D.h \
		include/Point3D.h \
		include/SpEnums.h \
		include/Octree.h \
		include/PointContainer.h \
		include/EdgeContainer.h \
		include/FaceContainer.h \
		include/Box.h \
		include/Scene.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Object3D.o src/Object3D.cpp

obj/Octree.o: src/Octree.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Octree.o src/Octree.cpp

obj/Scene.o: src/Scene.cpp include/StdAfx.h \
		include/Scene.h \
		include/Point3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Scene.o src/Scene.cpp

obj/Sphere.o: src/Sphere.cpp include/StdAfx.h \
		include/Sphere.h \
		include/Object3D.h \
		include/IObject3D.h \
		include/Point3D.h \
		include/SpEnums.h \
		include/Octree.h \
		include/PointContainer.h \
		include/EdgeContainer.h \
		include/FaceContainer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Sphere.o src/Sphere.cpp

obj/StdAfx.o: src/StdAfx.cpp include/StdAfx.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/StdAfx.o src/StdAfx.cpp

obj/RendererFactory.o: src/RendererFactory.cpp include/StdAfx.h \
		include/RendererFactory.h \
		include/SpEnums.h \
		include/IRenderer.h \
		include/PointRenderer.h \
		include/BufferObject.h \
		include/Point3D.h \
		include/FlatRenderer.h \
		include/WireframeRenderer.h \
		include/SmoothRenderer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/RendererFactory.o src/RendererFactory.cpp

obj/FlatRenderer.o: src/FlatRenderer.cpp include/StdAfx.h \
		include/FlatRenderer.h \
		include/IRenderer.h \
		include/BufferObject.h \
		include/Point3D.h \
		include/IObject3D.h \
		include/SpEnums.h \
		include/Octree.h \
		include/PointContainer.h \
		include/EdgeContainer.h \
		include/FaceContainer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/FlatRenderer.o src/FlatRenderer.cpp

obj/PointRenderer.o: src/PointRenderer.cpp include/StdAfx.h \
		include/PointRenderer.h \
		include/IRenderer.h \
		include/BufferObject.h \
		include/Point3D.h \
		include/IObject3D.h \
		include/SpEnums.h \
		include/Octree.h \
		include/PointContainer.h \
		include/EdgeContainer.h \
		include/FaceContainer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/PointRenderer.o src/PointRenderer.cpp

obj/WireframeRenderer.o: src/WireframeRenderer.cpp include/StdAfx.h \
		include/WireframeRenderer.h \
		include/IRenderer.h \
		include/IObject3D.h \
		include/Point3D.h \
		include/SpEnums.h \
		include/Octree.h \
		include/PointContainer.h \
		include/EdgeContainer.h \
		include/FaceContainer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/WireframeRenderer.o src/WireframeRenderer.cpp

obj/SmoothRenderer.o: src/SmoothRenderer.cpp include/StdAfx.h \
		include/SmoothRenderer.h \
		include/IRenderer.h \
		include/BufferObject.h \
		include/Point3D.h \
		include/IObject3D.h \
		include/SpEnums.h \
		include/Octree.h \
		include/PointContainer.h \
		include/EdgeContainer.h \
		include/FaceContainer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/SmoothRenderer.o src/SmoothRenderer.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

